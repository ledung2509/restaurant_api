#
#Connect database with PostgreSQL
#
#spring.datasource.url=jdbc:postgresql://localhost:5432/test_connection
#spring.datasource.username=postgres
#spring.datasource.password=
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
#
#Connect database with MySQL
#
spring.application.name=Restaurant_Management
spring.datasource.url=jdbc:mysql://localhost:3306/restaurant_management
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#
#JPA Properties
#
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
#
#Spring Security
#
spring.security.user.name=test
spring.security.user.password={noop}123456
#
#Logging
#
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.data.redis=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE
logging.level.org.springframework.security.web.authentication=DEBUG
logging.level.org.springframework.messaging=DEBUG
#
#Redis
#
spring.data.redis.host=localhost
spring.data.redis.port=6379
#
#Server
#
server.port=8080
#
#Validation
#
#
#Thymeleaf
#
spring.thymeleaf.check-template-location= false
# Use Docker service name for Elasticsearch
spring.elasticsearch.rest.uris=http://elasticsearch:9200

# Increase timeouts (if needed)
spring.elasticsearch.rest.connection-timeout=10000
spring.elasticsearch.rest.read-timeout=10000
